<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.BookDao">
    <resultMap id="Book" type="com.example.demo.entity.Book">
        <id column="book_id" property="bookId"/>
        <result column="book_name" property="bookName"/>
        <result column="book_isbn" property="bookIsbn"/>
        <result column="book_author" property="bookAuthor"/>
        <result column="book_status" property="bookStatus"/>
        <result column="book_publisher" property="bookPublisher"/>
        <result column="book_createtime" property="bookCreateTime"/>
        <result column="book_info" property="bookInfo"/>
    </resultMap>

    <sql id="whereQuery">
        <where>
            <if test="bookName!=null and bookName!=''">
                book_name like concat("%",#{bookName},"%")
            </if>
        </where>
    </sql>

    <select id="getAllBooks" resultMap="Book">
        select book_id,book_name,book_isbn,
                book_author,book_status,
                book_info, book_publisher, book_createtime
        from book
        <include refid="whereQuery"/>
    </select>

    <select id="getBookById" resultMap="Book">
        select book_id,book_name,book_isbn,
                book_author,book_status,
                book_info, book_publisher, book_createtime
        from book
        where book_id=#{bookId}
    </select>

    <select id="getPassBook" resultMap="Book">
        select
        b.book_id,
        book_name,
        book_isbn,
        book_author,
        book_status,
        book_publisher ,
        book_info,
        book_createtime
        from book b,borrow,user u
        where u.user_id=borrow.user_id and b.book_id=borrow.book_id and borrow_state=1
        and borrow.user_id=#{userId}
    </select>

    <insert id="insertBook">
        insert into
        book
        ( book_name,
          book_isbn,
          book_author,
          book_status,
          book_info,
          book_publisher,
          book_createtime
        )
        values
        ( #{bookName},
          #{bookIsbn},
          #{bookAuthor},
          0,
          #{bookInfo},
          #{bookPublisher},
          now()
        )

    </insert>

    <delete id="deleteBookById">
        delete from book where book_id=#{bookId}
    </delete>

    <update id="updateBook">
        update book
        set
        book_id = #{bookId},
        book_name = #{bookName},
        book_isbn = #{bookIsbn},
        book_author = #{bookAuthor},
        book_info = #{bookInfo},
        book_publisher = #{bookPublisher}
        where book_id = #{bookId}
    </update>
    <update id="borrowBook">
        update book
        set book_status = 1
        where book_id = #{bookId}
    </update>

</mapper>
